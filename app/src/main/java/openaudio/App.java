/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package openaudio;

import java.io.File;

import javafx.application.Application;
import javafx.beans.property.DoubleProperty;
import javafx.beans.property.SimpleDoubleProperty;
import javafx.scene.Scene;
import javafx.scene.control.Label;
import javafx.scene.control.Slider;
import javafx.scene.layout.StackPane;
import javafx.stage.Stage;
import javafx.scene.media.Media;
import javafx.scene.media.MediaPlayer;
import javafx.scene.layout.VBox;

import javafx.animation.*;
import javafx.util.Duration;
import java.util.concurrent.atomic.AtomicBoolean;


public class App extends Application {

    private MediaPlayer mediaPlayer;
    private AtomicBoolean userIsDraggingSlider = new AtomicBoolean(false);
    private Timeline sliderUpdater;
    private Slider slider;

    public void playSong(String songPath) {

        if (mediaPlayer != null) {   // if other songs currently playing, then stop it
            mediaPlayer.stop();
        }
        Media media = new Media(new File(songPath).toURI().toString());
        mediaPlayer = new MediaPlayer(media);
        mediaPlayer.setOnReady(() -> {
            slider.setMax(mediaPlayer.getMedia().getDuration().toSeconds());
        });

        // regulation variable
        DoubleProperty currentSongSeconds = new SimpleDoubleProperty();
        mediaPlayer.currentTimeProperty().addListener((observable, oldValue, newValue) -> {
            currentSongSeconds.set(newValue.toSeconds());
        });

        slider.setOnMousePressed(event -> {
            userIsDraggingSlider.set(true);
        });
        slider.setOnMouseReleased(event -> {
            userIsDraggingSlider.set(false);
            mediaPlayer.seek(javafx.util.Duration.seconds(slider.getValue()));
        });

        // timeline that updates slider (if not dragged by user)
        sliderUpdater = new Timeline(
            new KeyFrame(
                Duration.seconds(0),
                event -> {
                    if (!userIsDraggingSlider.get()) {
                        slider.setValue(currentSongSeconds.get());
                    }
                }
            ),
            new KeyFrame(Duration.seconds(0.1))
        );
        sliderUpdater.setCycleCount(Timeline.INDEFINITE);
        sliderUpdater.play();

        mediaPlayer.play();
    }

    @Override
    public void start(Stage stage) {
        String javaVersion = System.getProperty("java.version");
        String javafxVersion = System.getProperty("javafx.version");
        Label l = new Label("Hello, JavaFX " + javafxVersion + ", running on Java " + javaVersion + ".");
        VBox vBox = new VBox();
        vBox.getChildren().add(l);
        slider = new Slider();
        vBox.getChildren().add(slider);
        playSong("src/main/resources/abc.mp3");
        Scene scene = new Scene(new StackPane(vBox), 640, 480);
        stage.setScene(scene);
        stage.show();
    }


    public static void main(String[] args) {
        launch();
    }

}